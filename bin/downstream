#!/usr/bin/env node

const bytes = require('bytes')
const config = require('config')
const moment = require('moment')
const io = require('socket.io-client')

const args = process.argv
const uri = `http://localhost:${config.get('port')}`

function connect (command, args) {
  const socket = io(uri)

  socket.on('disconnect', () => {
    console.log(`Lost connection to ${uri}`)
    process.exit()
  })

  if (command === 'add') {
    socket.on('torrent_added_reply', torrent => {
      console.log(`Successfully added "${torrent.name}"`)
      process.exit()
    })

    socket.on('torrent_add_error', err => {
      console.log(err)
      process.exit()
    })
  }

  if (command === 'remove') {
    socket.on('torrent_removed_reply', torrent => {
      console.log(`Successfully removed "${torrent.name}"`)
      process.exit()
    })

    socket.on('torrent_remove_error', err => {
      console.log(err)
      process.exit()
    })
  }

  if (command === 'list') {
    socket.on('torrent_list', torrents => {
      torrents.forEach(torrent => {
        const progress = (torrent.progress * 100).toFixed(2)
        const downloadSpeed = bytes(torrent.downloadSpeed)
        const uploadSpeed = bytes(torrent.uploadSpeed)
        const timeRemaining = moment.utc(torrent.timeRemaining).format('HH:mm:ss')
        console.log(`${torrent.name} (${bytes(torrent.length)}) ${progress}% complete, ${downloadSpeed}/s down, ${uploadSpeed}/s up, ${timeRemaining} remaining`)
      })
      process.exit()
    })
  }

  return new Promise(resolve => {
    socket.on('connect', () => {
      resolve(socket)
    })
  })
}

if (args[2] === 'add') {
  if (!args[3]) {
    console.log('Usage: add <magnet uri|torrent link>')
    process.exit()
  }
  connect('add', { id: args[3] }).then(socket => socket.emit('add_torrent', args[3]))
} else if (args[2] === 'remove') {
  if (!args[3]) {
    console.log('Usage: remove <magnet uri|torrent link>')
    process.exit()
  }
  connect('remove', { id: args[3] }).then(socket => socket.emit('remove_torrent', args[3]))
} else if (args[2] === 'list') {
  connect('list').then(socket => socket.emit('list_torrents'))
} else {
  console.log('Downstream Command Line Interface')
  console.log()
  console.log('Available Commands:')
  console.log('add <magnet uri|torrent url|torrent path|info hash> - Adds the specified torrent')
  console.log('remove <magnet uri|torrent url|torrent path|info hash> - Removes the specified torrent')
  console.log('list - Lists all torrents')
  process.exit()
}
