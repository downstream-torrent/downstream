#!/usr/bin/env node

const bytes = require('bytes')
const config = require('config')
const readline = require('readline')
const io = require('socket.io-client')

const uri = process.argv[2] || `http://localhost:${config.get('port')}`
const socket = io(uri)
const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
})

function log (...args) {
  console.log()
  console.log(...args)
}

function addTorrent (uri) {
  if (!uri) {
    log('Usage: add <magnet uri>')
    return
  }
  socket.emit('add', uri)
}

function removeTorrent (torrentId) {
  if (!torrentId) {
    log('Usage: remove <torrent id>')
    return
  }
  socket.emit('remove', torrentId)
}

function listTorrents () {
  socket.emit('list')
}

function getInput () {
  rl.question('>>> ', answer => {
    const args = answer.split(' ')
    if (args[0] === 'add') {
      addTorrent(args[1])
    } else if (args[0] === 'remove') {
      removeTorrent(args[1])
    } else if (args[0] === 'list') {
      listTorrents()
    } else {
      log('Unknown command')
    }

    getInput()
  })
}

socket.on('connect', () => {
  log(`Connection established to ${uri}`)
  getInput()
})

socket.on('disconnect', () => {
  log(`Disconnected from ${uri}`)
})

socket.on('list', torrents => {
  log('ID\tDL SPEED\tUL SPEED\tDOWNLOADED\tPROGRESS\tRATIO\tPATH')
  torrents.forEach(torrent => {
    const downloadSpeed = `${bytes(torrent.downloadSpeed)}/s`
    const uploadSpeed = `${bytes(torrent.uploadSpeed)}/s`
    const downloaded = bytes(torrent.downloaded)
    const progress = (torrent.progress * 100).toFixed(2)
    console.log(`${torrent.hash}\t${downloadSpeed}\t${uploadSpeed}\t${downloaded}\t${progress}%\t${torrent.ratio}\t${torrent.path}`)
  })
})
